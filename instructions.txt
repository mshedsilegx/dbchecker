Implement in golang a database connectivity checker that supports MySQL, PostgreSQL, Oracle 10g+, SQL Server, MongoDB, and SQLite. Database id, Database type, hostname, port, username, password, database name, health query to be executed after connection is successfull will be stored in a property file, which name will be passed as a command line parameter. Passwords will be stored encrypted. The encryption key is stored in an environment variable DB_SECRET_KEY, that needs to be de-obfuscated via XOR prior using. TLS needs to be supported for DB connectivity. Use drivers github.com/sijms/go-ora/v2 for Oracle DB, github.com/microsoft/go-mssqldb for sqlserver, mattn/go-sqlite3 for sqlite. The program will connect to the DB, and if connection is successful, execute the query specified in the property file. the value of DB_SECRET_KEY is XOR obfuscated, outside of thie program, so this program needs to de-obfuscate via XOR prior using. The moingodb healthcheck will be a ping, then list all collections for the database specified in the healthquery. The property file can contain multiple databases to check, so each one will have a unique database identifier (database id), passed as a command parameter.
